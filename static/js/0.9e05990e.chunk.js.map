{"version":3,"sources":["components/Home/RequestDemo/RequestForm/InputSection/InputSection.js","components/Home/RequestDemo/RequestForm/RequestForm.js","components/Home/RequestDemo/Request.js"],"names":["InputSection","props","useState","name","validname","email","validemail","phone","validphone","company","validcompany","state","setstate","HandleChange","e","target","value","length","className","Input","type","label","onChange","placeholder","err","style","textAlign","marginTop","marginBottom","id","onClick","lerr","test","trim","ClosePop","Clevertap","window","clevertap","onUserLogin","push","toLowerCase","HandleSubmit","RequestForm","display","show","event","currentTarget","handleClick","height","data-src","alt","withRouter","connect","auth","navigationStack","authObj","request","setRequest","showPopUp","setShowPopUp","pflag","backgroundColor","info","color","isWraped","careheading","paddingTop","caresub","clicked","authStatus","history","urls","GSTIN_DETAILS","VERIFY_PHONE","IsRedBus","Popup","showImg","data","title","content","Close"],"mappings":"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","file":"static/js/0.9e05990e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './InputSection.scss';\r\nimport { useState } from 'react';\r\nimport Input from '../../../../../Input-controls/Input/Input';\r\nimport { notify } from '../../../../../Input-controls/Toast/Toast';\r\nimport { Clevertap, ClevertapUserProfile } from '../../../../../utils/Utils';\r\nimport Popup from '../../../../Common/ConfirmationPopUp/Popup';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function InputSection(props) {\r\n\r\n    const [state, setstate] = useState({\r\n        name:\"\",\r\n        validname:\"\",\r\n        email:\"\",\r\n        validemail:\"\",\r\n        phone:\"\",\r\n        validphone:\"\",\r\n        company: \"\",\r\n        validcompany: \"\"\r\n    })\r\n\r\n\r\n    const HandleChange=(e)=>{\r\n        const{name, value}=e.target;\r\n        if(name==\"phone\"){\r\n            if(value.length<=10){\r\n                setstate({...state, [name]:value, [`valid${[name]}`]:true})\r\n            }\r\n        }else{\r\n            setstate({...state, [name]:value, [`valid${[name]}`]:true})\r\n        }\r\n    }\r\n\r\n    // name.trim()==\"\" ||\r\n\r\n    const HandleSubmit=()=>{\r\n\r\n        const{name, email, phone, company}=state;\r\n        var lerr = false;\r\n\r\n        if((!/^[a-zA-Z ]{2,100}$/.test(name))){\r\n            setstate({...state, validname:false})\r\n            lerr=true\r\n        }\r\n\r\n        else if(phone.trim()== \"\" || !/^[0]?[56789]\\d{9}$/.test(phone))\r\n        {\r\n            setstate({...state, validphone:false})\r\n            lerr=true\r\n        }\r\n\r\n        else if(email.trim()== \"\" || !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email))\r\n        {\r\n            setstate({...state, validemail:false})\r\n            lerr=true\r\n        }\r\n        else if(company.trim() == \"\"){\r\n          setstate({...state, validcompany:false});\r\n          lerr=true;\r\n        }\r\n\r\n\r\n\r\n                if(lerr==false){\r\n                  props.ClosePop(\"showSuccess\");\r\n                    let response=Clevertap(\"UserRequest\",{\r\n                        \"name\": name,\r\n                        \"Email\": email,\r\n                        \"Phone\": phone,\r\n                        \"company\": company\r\n                    })\r\n                    window.clevertap.onUserLogin.push({\r\n                        \"Site\": {\r\n                            \"Name\": name,\r\n                            \"Identity\": phone,\r\n                            \"Email\": email.toLowerCase(),\r\n                            \"Phone\": \"+91\"+phone, \r\n                            \"Company_Name\": company \r\n                        }\r\n                       });\r\n                    //   if(response){\r\n                    //     notify.success(\"Success\")\r\n                        setstate({...state, name:'', email:'', phone:'', company:''})\r\n                    //     // setsuccessPopup(true)\r\n                    //   }\r\n                    }\r\n        }\r\n\r\n//  const[successPopup, setsuccessPopup]=useState(false)\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n            <div className=\"qoute-div\">\r\n                <div className=\"wrapperinpsec\">\r\n                    <div className=\"quote-txt\">Request Demo</div>\r\n\r\n\r\n\r\n                    <div className=\"wrp-clss\">\r\n                        <div>\r\n                            <Input\r\n                                type=\"text\"\r\n                                label=\"Your Name\"\r\n                                name=\"name\"\r\n                                value={state.name}\r\n                                onChange={(e)=>HandleChange(e)}\r\n                                placeholder=\"Name\"\r\n                                err={state.validname===false && \"Please enter valid name\"}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"wrp-clss\">\r\n                        <div>   \r\n                            <Input\r\n                                type=\"number\"\r\n                                label=\"Mobile Number\"\r\n                                name=\"phone\"\r\n                                value={state.phone}\r\n                                onChange={(e)=>HandleChange(e)}\r\n                                placeholder=\"Mobile number\"\r\n                                err={state.validphone===false && \"Please enter valid mobile number\"}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"wrp-clss\">\r\n                        <div>\r\n                            <Input\r\n                                type=\"text\"\r\n                                label=\"Email ID\"\r\n                                name=\"email\"\r\n                                value={state.email}\r\n                                onChange={(e)=>HandleChange(e)}\r\n                                placeholder=\"Email ID\"\r\n                                err={state.validemail===false && \"Please enter valid email id\"}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"wrp-clss\">\r\n                        <div>\r\n                            <Input\r\n                                type=\"text\"\r\n                                label=\"Company\"\r\n                                name=\"company\"\r\n                                value={state.company}\r\n                                onChange={(e)=>HandleChange(e)}\r\n                                placeholder=\"Company Name\"\r\n                                err={state.validcompany===false && \"Please enter valid company name\"}/>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div style={{textAlign: 'center',marginTop: '30px',marginBottom: '20px'}}>\r\n                       <button id=\"RequestDemoBtn_Home\" className=\"startedbtn\" onClick={()=>HandleSubmit()}>Submit</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './RequestForm.scss'\r\nimport InputSection from './InputSection/InputSection'\r\n\r\nexport default function RequestForm(props) {\r\n\r\n    const handleClick=(event)=>{\r\n        if(event.currentTarget==event.target){\r\n            props.ClosePop()\r\n        }\r\n    }\r\n    return (\r\n        <div style={{display:props.show?'block':'none'}}>\r\n            <div className=\"blurBackRequest\" onClick={(event)=>handleClick(event)}>\r\n                <div className=\"requestSectionCanvs\">\r\n                    <div className=\"mt-3 float-right mr-3\">\r\n                        <img className=\"lazyload closeIcoRequest\" onClick={props.ClosePop} height='30px' data-src='https://res.cloudinary.com/bits-pilani/image/upload/fl_lossy,f_auto,q_auto/v1593513756/New-home-screen/Group_582_1_bppect.jpg'alt=\"form\" />\r\n                    </div>\r\n                    <div className=\"hmPgReqDmSecCls\">\r\n                        <InputSection\r\n                          ClosePop={(e)=>props.ClosePop(e)}\r\n                          />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './Request.scss';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urls } from '../../../routes/routes';\r\nimport RequestForm from './RequestForm/RequestForm';\r\nimport { Clevertap, IsRedBus } from '../../../utils/Utils';\r\n// import Toast from '../../../Input-controls/Toast/Toast';\r\nimport Popup from '../../Common/ConfirmationPopUp/Popup';\r\n\r\nfunction Request(props) {\r\n\r\n    const HandleGetSTarted=()=>{\r\n        Clevertap('GetStarted',{clicked:true})\r\n        if(props.auth.authStatus===true){\r\n            props.history.push(urls.GSTIN_DETAILS)\r\n        }else{\r\n            props.history.push(urls.VERIFY_PHONE)\r\n        }\r\n    }\r\n\r\n    const[request, setRequest]=useState(false)\r\n    const RequestDemoClicked=()=>{\r\n        Clevertap('RequestDemo',{clicked:true})\r\n        setRequest(true)\r\n    }\r\n    const closePop = (pflag) => {\r\n      \r\n      setRequest(false);\r\n      if(pflag == \"showSuccess\")\r\n      {\r\n          setShowPopUp(true);\r\n      }\r\n    }\r\n\r\n    const [showPopUp, setShowPopUp] = useState(false);\r\n\r\n    return (\r\n        <>\r\n        <RequestForm\r\n            ClosePop={(e)=>closePop(e)}\r\n            show={request}\r\n        />\r\n        <div className=\"demodiv\" style={{backgroundColor:props.info.color}}>\r\n            <div className=\"demoflexx homeWrapperComponents\">\r\n                <div className=\"infodiv\">\r\n                    <div className={props.isWraped && `wrp-req-div`}>\r\n                       <div className=\"care-head mainHeading_max\"> {props.info.careheading}</div>\r\n                       <div className=\"contentTxt aac\" style={{paddingTop:'6px'}}>{props.info.caresub}</div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"btnflexx\">\r\n                        <div className=\"btn-wrp\"><button className=\"startedbtn\" onClick={()=>HandleGetSTarted()}>{IsRedBus()}</button>\r\n                         <span><button className=\"demobtn\" onClick={RequestDemoClicked}>Request Demo</button></span></div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Popup show={showPopUp} showImg={true}\r\n          data={{title:\"success\", content:\"Thank you for submitting the details. We will get back to you soon!\"}}\r\n          Close={()=>setShowPopUp(false)}/>\r\n     </>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    auth:state.navigationStack.authObj\r\n  })\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(Request))\r\n"],"sourceRoot":""}